"""init

Revision ID: 12ca0e4c2fd7
Revises: 
Create Date: 2025-09-28 19:57:52.127385

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '12ca0e4c2fd7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('is_merchant', sa.Boolean(), nullable=False),
    sa.Column('merchant_status', sa.String(length=32), nullable=False),
    sa.Column('kyc_level', sa.Integer(), nullable=False),
    sa.Column('kyc_status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('payment_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requester_user_id', sa.UUID(), nullable=False),
    sa.Column('target_user_id', sa.UUID(), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=8), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('idempotency_key', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['requester_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('balance_cents', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=8), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('merchants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('wallet_id')
    )
    op.create_table('transfers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('from_wallet_id', sa.UUID(), nullable=True),
    sa.Column('to_wallet_id', sa.UUID(), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=8), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('idempotency_key', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_wallet_id'], ['wallets.id'], ),
    sa.ForeignKeyConstraint(['to_wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('idempotency_key', name='uq_transfers_idempotency')
    )
    op.create_index('ix_transfers_created_at', 'transfers', ['created_at'], unique=False)
    op.create_table('ledger_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transfer_id', sa.UUID(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('amount_cents_signed', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['transfer_id'], ['transfers.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_ledger_wallet_id_created', 'ledger_entries', ['wallet_id', 'created_at'], unique=False)
    op.create_table('qr_codes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('merchant_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=128), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=8), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', name='uq_qr_code')
    )
    op.create_index('ix_qr_expires', 'qr_codes', ['expires_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_qr_expires', table_name='qr_codes')
    op.drop_table('qr_codes')
    op.drop_index('ix_ledger_wallet_id_created', table_name='ledger_entries')
    op.drop_table('ledger_entries')
    op.drop_index('ix_transfers_created_at', table_name='transfers')
    op.drop_table('transfers')
    op.drop_table('merchants')
    op.drop_table('wallets')
    op.drop_table('payment_requests')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###

